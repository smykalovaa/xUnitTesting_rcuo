{2,
{28,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},0,"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"
// { Plugin interface
&НаКлиенте
Функция ОписаниеПлагина(ВозможныеТипыПлагинов) Экспорт
	Возврат ОписаниеПлагинаНаСервере(ВозможныеТипыПлагинов);
КонецФункции

&НаСервере
Функция ОписаниеПлагинаНаСервере(ВозможныеТипыПлагинов)
	Возврат ЭтотОбъектНаСервере().ОписаниеПлагина(ВозможныеТипыПлагинов);
КонецФункции
// } Plugin interface

// { Loader interface
&НаКлиенте
Функция ВыбратьПутьИнтерактивно(ТекущийПуть = """") Экспорт
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораКаталога.Каталог = ТекущийПуть;
	
	Результат = """";
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		Результат = ДиалогВыбораКаталога.Каталог;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция Загрузить(КонтекстЯдра, Путь) Экспорт
	КаталогДляЗагрузки = Новый Файл(Путь);
	Если Не (КаталогДляЗагрузки.Существует() И КаталогДляЗагрузки.ЭтоКаталог()) Тогда
		ВызватьИсключение ""Для загрузки передан не каталог файловой системы <"" + КаталогДляЗагрузки.ПолноеИмя + "">"";
	КонецЕсли;
	ДеревоТестов = ЗагрузитьКаталог(КонтекстЯдра, КаталогДляЗагрузки);
	ДеревоТестов.Имя = КаталогДляЗагрузки.ПолноеИмя;
	
	Возврат ДеревоТестов;
КонецФункции

&НаКлиенте
Функция ПолучитьКонтекстПоПути(КонтекстЯдра, Путь) Экспорт
	ЗагрузчикФайла = КонтекстЯдра.Плагин(""ЗагрузчикФайла"");
	Контекст = ЗагрузчикФайла.ПолучитьКонтекстПоПути(КонтекстЯдра, Путь);
	
	Возврат Контекст;
КонецФункции
// } Loader interface

&НаКлиенте
Функция ЗагрузитьКаталог(КонтекстЯдра, КаталогДляЗагрузки)
	КонтейнерКаталога = КонтекстЯдра.Плагин(""ПостроительДереваТестов"").СоздатьКонтейнер(КаталогДляЗагрузки.Имя);
	НайденныеФайлы = НайтиФайлы(КаталогДляЗагрузки.ПолноеИмя, ""*"", Ложь);
	Для каждого Файл из НайденныеФайлы Цикл
		ОбработкаПрерыванияПользователя();
		Если Файл.ЭтоКаталог() Тогда
			КонтейнерДочернегоКаталога = ЗагрузитьКаталог(КонтекстЯдра, Файл);
			Если КонтейнерДочернегоКаталога.Строки.Количество() > 0 Тогда
				КонтейнерКаталога.Строки.Добавить(КонтейнерДочернегоКаталога);
			КонецЕсли;
		ИначеЕсли НРег(Файл.Расширение) = "".epf"" Тогда
			КонтейнерФайла = ЗагрузитьФайл(КонтекстЯдра, Файл);
			Если ЗначениеЗаполнено(КонтейнерФайла) И КонтейнерФайла.Строки.Количество() > 0 Тогда
				КонтейнерКаталога.Строки.Добавить(КонтейнерФайла);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат КонтейнерКаталога;
КонецФункции

&НаКлиенте
Функция ЗагрузитьФайл(КонтекстЯдра, ФайлОбработки)
	ЗагрузчикФайла = КонтекстЯдра.Плагин(""ЗагрузчикФайла"");
	Попытка
		ДеревоТестовФайла = ЗагрузчикФайла.Загрузить(КонтекстЯдра, ФайлОбработки.ПолноеИмя);
		Результат = ДеревоТестовФайла;
		Если ДеревоТестовФайла.Строки.Количество() > 0 Тогда
			Результат = ДеревоТестовФайла.Строки[0];
		КонецЕсли;
		
	Исключение
		Сообщить(""Не удалось загрузить файл "" + ФайлОбработки.ПолноеИмя + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Результат = Неопределено;
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

// { Helpers
&НаСервере
Функция ЭтотОбъектНаСервере()
	Возврат РеквизитФормыВЗначение(""Объект"");
КонецФункции
// } Helpers
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",fad1daa2-cbc6-40fb-b91a-a1cb8474407d}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}