{2,
{28,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},0,"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"
//{ основная процедура для юнит-тестирования xUnitFor1C

&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем УтвержденияПроверкаТаблиц;

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин(""УтвержденияBDD"");
	Утверждения = КонтекстЯдра.Плагин(""БазовыеУтверждения"");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин(""УтвержденияПроверкаТаблиц"");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.Добавить(""Тест_ДолженПроверитьНеРавенствоТабличныхДокументов"");
	НаборТестов.Добавить(""Тест_ДолженПроверитьРавенствоТабличныхДокументов"");
	НаборТестов.Добавить(""Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиКолонками"");
	НаборТестов.Добавить(""Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиСтроками"");
КонецПроцедуры

//}

//{ блок юнит-тестов - сами тесты
&НаКлиенте
Процедура Тест_ДолженПроверитьНеРавенствоТабличныхДокументов() Экспорт
	Макет1 = ПолучитьМакет(""СозданиеОдногоПользователяИБ"");
	Макет2 = ПолучитьМакет(""СозданиеОдногоПользователяИБ_УФ"");
	
	БылоИсключение = Ложь;
	Попытка
		УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2, ""Таблицы 1 и 2 не должны совпадать, а они одинаковы!"");
	Исключение
		Ошибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		БылоИсключение = Истина;
	КонецПопытки;
	Утверждения.Проверить(БылоИсключение, ""Должны были получить исключение из-за неравенства таблиц, а его не было"");
	
	СтрокаОшибки =
		""Таблицы должны совпадать, а они различны
		|Различия в таблицах:
		|Ожидали статус <ТаблицыСовпадают>, а получили <НеСовпадаютЗначенияВЯчейкеТаблицы>
		|Значение [К6:6]. Ожидали <Обычное приложение>, а получили <Управляемое приложение>
		|
		|Таблицы 1 и 2 не должны совпадать, а они одинаковы!"";
	
	Утверждения.ПроверитьВхождение(Ошибка, СтрокаОшибки, ""Должны были получить исключение из-за неравенства таблиц, а его не было"");
КонецПроцедуры

&НаКлиенте
Процедура Тест_ДолженПроверитьРавенствоТабличныхДокументов() Экспорт
	Макет1 = ПолучитьМакет(""СозданиеОдногоПользователяИБ_УФ"");
	Макет2 = ПолучитьМакет(""СозданиеОдногоПользователяИБ_УФ"");
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2, ""Таблицы 1 и 2 должны совпадать, а они различны!"");
КонецПроцедуры

&НаКлиенте
Процедура Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиКолонками() Экспорт
	
	Макет1 = ПолучитьМакет(""СозданиеОдногоПользователяИБ"");
	Макет2 = ПолучитьМакет(""СозданиеОдногоПользователяИБ_СоСкрытойКолонкой"");
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2, Истина, ""Таблицы 1 и 2 должны совпадать, а они различны!"");
	
	Макет3 = ПолучитьМакет(""СозданиеОдногоПользователяИБ"");
	Макет3.Область(0, 1, 1, 1).Видимость = Ложь;
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет3, ""Таблицы 1 и 3 должны совпадать, а они различны!"");
	
	Макет4 = ПолучитьМакет(""СозданиеОдногоПользователяИБ_УФ"");
	Макет4.Область(0, 6, 1, 6).Видимость = Ложь;
	Макет5 = ПолучитьМакет(""СозданиеОдногоПользователяИБ"");
	Макет5.Область(0, 6, 1, 6).Видимость = Ложь;
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет4, Макет5, Истина, ""Таблицы 4 и 5 должны совпадать, а они различны!"");
	
КонецПроцедуры

&НаКлиенте
Процедура Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиСтроками() Экспорт
	
	Макет1 = ПолучитьМакет(""СозданиеОдногоПользователяИБ"");
	Макет2 = ПолучитьМакет(""СозданиеОдногоПользователяИБ_УФ"");
	
	Макет1.Область(6,, 6).Видимость = Ложь;
	Макет2.Область(6,, 6).Видимость = Ложь;
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2,, Истина, ""Таблицы 1 и 2 должны совпадать, а они различны!"");
	
	//Макет3 = ПолучитьМакет(""СозданиеОдногоПользователяИБ"");
	//Макет3.ВставитьОбласть(Макет2.Область(2,, 2), Макет3.Область(1,, 1), ТипСмещенияТабличногоДокумента.ПоВертикали);
	//Макет3.Область(1,, 1).Видимость = Ложь;
	//
	//УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет3,, Истина, ""Таблицы 1 и 3 должны совпадать, а они различны!"");
	
	Макет4 = ПолучитьМакет(""СозданиеОдногоПользователяИБ"");
	Макет4.Область(1,, 1).Видимость = Ложь;
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет4, ""Таблицы 1 и 4 должны совпадать, а они различны!"");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакет(ИмяМакета)
	ОсновнойОбъект = ОсновнойОбъект();
	Макет = ОсновнойОбъект.ПолучитьМакет(ИмяМакета);
	
	Макет2 = Новый ТабличныйДокумент;
	Макет2.Вывести(Макет);
	Возврат Макет2;
КонецФункции

&НаСервере
Функция ОсновнойОбъект()
	Возврат РеквизитФормыВЗначение(""Объект"");
КонецФункции

//} ",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",ba46524a-1f27-4008-8686-2703897f6737}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}