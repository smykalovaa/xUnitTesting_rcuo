Перем КонтекстЯдра;
Перем Ожидаем;
Перем Утверждения;
Перем ГенераторТестовыхДанных;

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	ГенераторТестовыхДанных = КонтекстЯдра.Плагин("СериализаторMXL");
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.Добавить("Тест_Проверить_ТочкуМаршрута_ОдинБП");
	НаборТестов.Добавить("Тест_Проверить_ТочкуМаршрута_ДваБП");
КонецПроцедуры


Процедура ПередЗапускомТеста() Экспорт 
	//Размещение = "C:\1С базы\Белгипрозем 2015\Тесты\xUnitFor1C\Разрабатываемые\СозданиеЭлементовСправочников.epf";
	//ВнОбр = ВнешниеОбработки.Создать(Размещение);
	
	//КонтекстЯдра.ВывестиСообщение("Перед запуском теста"); 
	НачатьТранзакцию();
КонецПроцедуры 

Процедура ПослеЗапускаТеста() Экспорт 
	
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	//КонтекстЯдра.ВывестиСообщение("После запуска теста"); 
	
КонецПроцедуры 

Процедура Тест_Проверить_ТочкуМаршрута_ОдинБП() Экспорт
	
	ТестовыеДанные = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "ТестовыеДанные");
	
	Утверждения.ПроверитьТип(ТестовыеДанные, "Структура");
	Утверждения.ПроверитьРавенство(5, ТестовыеДанные.Количество(), "ТестовыеДанные.Количество()");
	
	// Проверим точку маршрута в задаче
	Есть = ТестовыеДанные.Задача1БП1.ТочкаМаршрута;
	Надо = БизнесПроцессы.БизнесПроцесс1.ТочкиМаршрута.Действие1;
	Утверждения.ПроверитьРавенство(Есть, Надо, "Точка маршрута 1 БП");
	
КонецПроцедуры

Процедура Тест_Проверить_ТочкуМаршрута_ДваБП() Экспорт
	
	ТестовыеДанные = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "ТестовыеДанные");
	
	Утверждения.ПроверитьТип(ТестовыеДанные, "Структура");
	Утверждения.ПроверитьРавенство(5, ТестовыеДанные.Количество(), "ТестовыеДанные.Количество()");
	
	// Проверим точку маршрута в задаче
	Есть = ТестовыеДанные.Задача1БП2.ТочкаМаршрута;
	Надо = БизнесПроцессы.БизнесПроцесс2.ТочкиМаршрута.Действие1;
	Утверждения.ПроверитьРавенство(Есть, Надо, "ТочкаМаршрута");
	
КонецПроцедуры


