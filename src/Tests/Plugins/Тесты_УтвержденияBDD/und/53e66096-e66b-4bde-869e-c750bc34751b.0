{2,
{36,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{19,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0},0,"","",1,
{19,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,"",0,0},"&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин(""УтвержденияBDD"");
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСписокТестов() Экспорт
	ВсеТесты = Новый Массив;
	ВсеТесты.Добавить(""ТестДолжен_Проверить_РаботуУтвержденийBDD_НаКлиенте"");
	ВсеТесты.Добавить(""ТестДолжен_Проверить_РаботуКомпозитныхУтвержденийBDD_НаКлиенте"");
	ВсеТесты.Добавить(""ТестДолжен_Проверить_ВыбрасываемыеСообщения_НаКлиенте"");
	
	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_РаботуУтвержденийBDD_НаКлиенте() Экспорт
	Ожидаем.Что(1 > 0, ""ЭтоИстина"").ЭтоИстина();
	Ожидаем.Что(13 = 2, ""Не ЭтоИстина"").Не_().ЭтоИстина();
	Ожидаем.Что(Неопределено, ""Неопределено <> Истина"").Не_().ЭтоИстина();
	Ожидаем.Что(5 = 7, ""ЭтоЛожь"").ЭтоЛожь();
	Ожидаем.Что(Неопределено, ""Неопределено <> Ложь"").Не_().ЭтоЛожь();
	Ожидаем.Что(5, ""Равно"").Равно(5);
	Ожидаем.Что(4, ""Больше"").Больше(2);
	Ожидаем.Что(7, ""БольшеИлиРавно"").БольшеИлиРавно(7);
	Ожидаем.Что(15, ""Минимум"").Минимум(9);
	Ожидаем.Что(90, ""МеньшеИлиРавно"").МеньшеИлиРавно(100);
	Ожидаем.Что(90, ""Максимум"").Максимум(90);
	Ожидаем.Что(55, ""Меньше"").Меньше(56);
	Ожидаем.Что(1, ""Заполнено"").Заполнено();
	Ожидаем.Что(Новый Массив, ""Существует"").Существует();
	Ожидаем.Что(Неопределено, ""ЭтоНеопределено"").ЭтоНеопределено();
	Ожидаем.Что(Null, ""ЭтоNull"").ЭтоNull();
	Ожидаем.Что("""", ""ИмеетТип"").ИмеетТип(""Строка"");
	Ожидаем.Что(7, ""Между"").Между(1, 10);
	Ожидаем.Что(""Некая строка"", ""Содержит"").Содержит(""стр"");
	Ожидаем.Что(""Некая строка"", ""ИмеетДлину"").ИмеетДлину(12);
	Ожидаем.Что(Новый Структура).Метод(""Вставить"").ВыбрасываетИсключение(""Недостаточно фактических параметров"");
	Ожидаем.Что(Истина, ""ЕстьИстина"").ЕстьИстина().Существует();
	Ожидаем.Что(Ложь, ""ЕстьЛожь"").ЕстьЛожь().Существует();
	Ожидаем.Что(Неопределено, ""ЕстьНеопределено и ЭтоНе"").ЕстьНеопределено().ЭтоНе().Существует();
	Ожидаем.Что(Null, ""ЕстьNull и ЭтоНе"").ЕстьNull().ЭтоНе().Существует();
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_РаботуКомпозитныхУтвержденийBDD_НаКлиенте() Экспорт
	Ожидаем.Что(Новый Массив, ""Пустой массив"")
		.Существует()
		.Не_().Заполнено()
		.ИмеетДлину(0)
		.Не_().Содержит(5);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Проверить_ВыбрасываемыеСообщения_НаКлиенте() Экспорт
	ТекстИсключения = """";
	Попытка
		Ожидаем.Что(Ложь).ЭтоИстина();
	Исключение
		ТекстИсключения = ОписаниеОшибки();
	КонецПопытки;
	Ожидаем.Что(ТекстИсключения).Не_().Содержит(""НЕ"");
	
	ТекстИсключения = """";
	Попытка
		Ожидаем.Что(Истина).Не_().ЭтоИстина();
	Исключение
		ТекстИсключения = ОписаниеОшибки();
	КонецПопытки;
	Ожидаем.Что(ТекстИсключения).Содержит(""НЕ"");
КонецПроцедуры
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",dac151e7-68b1-453c-bf3b-a39dc0c46fb5}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}